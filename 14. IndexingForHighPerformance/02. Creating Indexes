Creating Indexes
    We can put an INDEX on a column to speed up queries 

    Syntax:
        CREATE INDEX idx/ix_columnName ON tableName (columnsNameWewantToPutIndexOn)


    e.x query to get customers located in 'CA'
        SELECT customer_id FROM customers WHERE state = 'CA';
    
    e.x See how MySQL executed the previous query
        EXPLAIN SELECT customer_id FROM customers WHERE state = 'CA';

        we will see:
        id, select_type, table, partitions, type, possible_keys, key, key_len, ref, rows => columns
        - type: ALL, this means MySQL is going to do a FULL TABLE SCAN, will scan every single record
        - rows: 1010, we see the number of records were scanned.
    
    Because we dont have an INDEX on the state column, in order to find customers located in 'CA', MySQL has to 
    scan every single record in the table. 

    CREATE INDEX idx_state ON customers (state);

    If we execute again the next line:
        EXPLAIN SELECT customer_id FROM customers WHERE state = 'CA';

        we will see:
        - type: ref, this means we dont have a full table scan
        - rows: 112, we reduce the number of records MySQL has to read from 1010 to 112.


Exercise. Write a query to find customers with more than 1000 points

-- Query
EXPLAIN SELECT customer_id FROM customers WHERE points > 1000;
    -type: ALL
    -rows: 1010

CREATE INDEX idx_points ON customers (points);

EXPLAIN SELECT customer_id FROM customers WHERE points > 1000;
    -type: range, this means we're looking for a range of records 
    -rows: 528

